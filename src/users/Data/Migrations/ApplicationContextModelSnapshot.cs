// <auto-generated />
using System;
using Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    partial class ApplicationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.RequisiteDetails", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BankName")
                        .HasColumnType("text");

                    b.Property<string>("CreditCardNumber")
                        .HasMaxLength(16)
                        .HasColumnType("character(16)")
                        .IsFixedLength();

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(12)
                        .HasColumnType("character(12)")
                        .IsFixedLength();

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RequisiteDetails");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BankName = "Kaspi",
                            CreditCardNumber = "1234567890123456",
                            PhoneNumber = "+77761667060",
                            UserId = new Guid("bf9519e7-67c6-4ed6-96f6-17d93dd34a6b")
                        });
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Hash")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("RefreshExpires")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("text");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<byte[]>("Salt")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf9519e7-67c6-4ed6-96f6-17d93dd34a6b"),
                            Email = "admin@gmail.com",
                            Firstname = "admin",
                            Hash = new byte[] { 218, 200, 113, 4, 156, 195, 71, 192, 230, 45, 96, 83, 135, 204, 199, 67, 118, 222, 105, 185, 255, 22, 39, 18, 29, 92, 108, 11, 112, 206, 95, 51 },
                            Lastname = "admin",
                            Role = "admin",
                            Salt = new byte[] { 203, 236, 166, 216, 206, 181, 98, 217, 58, 128, 238, 139, 251, 210, 32, 76, 198, 103, 26, 195, 215, 211, 24, 33, 160, 230, 164, 220, 109, 67, 173, 120, 102, 123, 55, 164, 20, 176, 147, 44, 153, 239, 66, 44, 45, 213, 36, 11, 139, 166, 182, 63, 237, 93, 49, 221, 88, 146, 58, 97, 45, 112, 239, 10 }
                        });
                });

            modelBuilder.Entity("Domain.Models.RequisiteDetails", b =>
                {
                    b.HasOne("Domain.Models.User", "User")
                        .WithMany("Requisites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Domain.Models.User", b =>
                {
                    b.Navigation("Requisites");
                });
#pragma warning restore 612, 618
        }
    }
}
